{"version":3,"sources":["components/DataFetch.js","App.js","index.js"],"names":["DataFetch","handleAnswer","data","question","answers","valueFromParent","timerParent","onClickResetBtn","className","dangerouslySetInnerHTML","__html","map","answer","idx","onClick","App","useState","questions","setQuestions","currentIndex","setCurrentIndex","score","setScore","intervalRef","useRef","timer","setTimer","useEffect","axios","get","then","res","results","correct_answer","incorrect_answers","sort","Math","random","startTimer","deadline","endtime","total","Date","parse","seconds","floor","minutes","hours","days","getTimeRemained","clearInterval","current","clearTimer","id","setInterval","getDeadlineTimer","setSeconds","getSeconds","length","window","location","reload","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.284eafea.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction DataFetch({\r\n  handleAnswer,\r\n  data: { question, answers },\r\n  valueFromParent,\r\n  timerParent,\r\n  onClickResetBtn,\r\n}) {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"question-section\">\r\n        <div className=\"question-count\">\r\n          <div>\r\n            Question {valueFromParent + 1}/<span>10</span>\r\n          </div>\r\n          <div className=\"timer\">{timerParent}</div>\r\n        </div>\r\n        <div>\r\n          <p dangerouslySetInnerHTML={{ __html: question }} />\r\n        </div>\r\n      </div>\r\n      <div className=\"answers-list\">\r\n        {answers.map((answer, idx) => {\r\n          return (\r\n            <button\r\n              key={idx}\r\n              className={\"btn\"}\r\n              onClick={() => {\r\n                handleAnswer(answer);\r\n                onClickResetBtn();\r\n              }}\r\n              dangerouslySetInnerHTML={{ __html: answer }}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataFetch;\r\n","import React, { useState, useEffect, useRef } from \"react\";\nimport \"./index.css\";\nimport DataFetch from \"./components/DataFetch\";\nimport axios from \"axios\";\n\nconst API_URL =\n  \"https://opentdb.com/api.php?amount=10&category=21&difficulty=medium&type=multiple\";\n\nfunction App() {\n  const [questions, setQuestions] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  const [score, setScore] = useState(0);\n  const intervalRef = useRef(null);\n  const [timer, setTimer] = useState(\"0\");\n\n  useEffect(() => {\n    axios\n      .get(API_URL)\n      .then((res) => res.data)\n      .then((data) => {\n        const questions = data.results.map((question) => ({\n          ...question,\n          answers: [\n            question.correct_answer,\n            ...question.incorrect_answers,\n          ].sort(() => Math.random() - 0.5),\n        }));\n        setQuestions(questions);\n      });\n  }, []);\n\n  const handleAnswer = (answer) => {\n    if (answer === questions[currentIndex].correct_answer) {\n      setScore(score + 1);\n    }\n    setCurrentIndex(currentIndex + 1);\n  };\n\n  const getTimeRemained = (endtime) => {\n    const total = Date.parse(endtime) - Date.parse(new Date());\n    const seconds = Math.floor((total / 1000) % 60);\n    const minutes = Math.floor((total / 1000 / 60) % 60);\n    const hours = Math.floor(((total / 1000) * 60 * 60) % 24);\n    const days = Math.floor(total / (1000 * 60 * 60 * 24));\n    return {\n      total,\n      days,\n      hours,\n      minutes,\n      seconds,\n    };\n  };\n\n  const startTimer = (deadline) => {\n    let { total, seconds } = getTimeRemained(deadline);\n    if (total >= 0) {\n      setTimer(seconds > 0 ? seconds : \"0\" + seconds);\n    } else {\n      clearInterval(intervalRef.current);\n    }\n  };\n\n  const clearTimer = (endtime) => {\n    setTimer(\"10\");\n    if (intervalRef.current) clearInterval(intervalRef.current);\n    const id = setInterval(() => {\n      startTimer(endtime);\n    }, 1000);\n    intervalRef.current = id;\n  };\n\n  const getDeadlineTimer = () => {\n    let deadline = new Date();\n    deadline.setSeconds(deadline.getSeconds() + 10);\n    return deadline;\n  };\n\n  useEffect(() => {\n    clearTimer(getDeadlineTimer());\n    return () => {\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    };\n  }, []);\n\n  const onClickResetBtn = () => {\n    if (intervalRef.current) clearInterval(intervalRef.current);\n    clearTimer(getDeadlineTimer());\n  };\n\n  const onClickRefreshPage = () => {\n    window.location.reload(false);\n  };\n\n  return questions.length > 0 ? (\n    <div>\n      {currentIndex >= questions.length || timer === \"00\" ? (\n        <div className=\"card\">\n          <h1 className=\"result\">Game Ended, Your Score is {score}</h1>\n          <div>\n            {\" \"}\n            <button\n              className=\"btn-refresh\"\n              onClick={() => onClickRefreshPage()}\n            >\n              Reset\n            </button>\n          </div>\n        </div>\n      ) : (\n        <>\n          <DataFetch\n            handleAnswer={handleAnswer}\n            data={questions[currentIndex]}\n            valueFromParent={currentIndex}\n            timerParent={timer}\n            onClickResetBtn={onClickResetBtn}\n          />\n        </>\n      )}\n    </div>\n  ) : (\n    <div className=\"container\">Loading...</div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}